<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CyberJagadeesh</title><link>https://cyberjagadeesh.github.io/</link><description>Recent content on CyberJagadeesh</description><generator>Hugo</generator><language>en</language><copyright>CyberJagadeesh</copyright><lastBuildDate>Tue, 15 Oct 2024 10:16:57 +0530</lastBuildDate><atom:link href="https://cyberjagadeesh.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Backtrack | THM Writeup</title><link>https://cyberjagadeesh.github.io/posts/thm/backtrack/writeup/</link><pubDate>Tue, 15 Oct 2024 10:16:57 +0530</pubDate><guid>https://cyberjagadeesh.github.io/posts/thm/backtrack/writeup/</guid><description>Introduction Detailed walkthroughs for Backtrack CTF challenges on TryHackMe .
Enumaration echo 10.10.233.212 backtrack.thm &amp;gt;&amp;gt; /etc/hosts Mappped the ip to domain backtrack.thm.
Rustscan $ rustscan -a backtrack.thm -- -sC -sV PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 60 OpenSSH 8.2p1 Ubuntu 4ubuntu0.11 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 3072 55:41:5a:65:e3:d8:c2:4f:59:a1:68:b6:79:8a:e3:fb (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDzPMYVGNn9fk2sUO4qG8t3GP/3ztCkoIRFTSFwnaHtRTiIe8s3ulwJkAyTZHSmedBOMihmyWyEmA44uxY4kUZEiba8R+c7aWHjTvD04VcKWPgVg1URPWMTHyxUcwKGnoh8n6VwM283+/4f2g2GSj2pVbacoV3xfDo8L4PshyfHK7dEd2qnQv9Yge3p5Aw/1Q7w1eaMZnaoicgzDgjhvqrRcS/DRcp3Lwoz6fGQW2/vFxW7d5aisTslKxRPslTy/Vrgprb7I+D9kdGEFqW/DXDfZLo+4O0woecE6+qSYPbIAjvIao25MTR8xHOFR0sCtyVfehEXYxvJ0fsqBG4yp/y15eDT3MSYevdvhHH1ZLejV66zILbPqUhzFBuMW1U6PKvSNPiQdzlnIRpD8ZQN7KJI8Y6zlHgoh8iu7+PgcUQNixYrX1GhMCYwNGHQlLOLriVRzhScZV3ObH1V8+g8I2sc3WZ54G2XUqZX+pN3ugjN1L5mo8mht1m7ZME+W9if37U= | 256 79:8a:12:64:cc:5c:d2:b7:38:dd:4f:07:76:4f:92:e2 (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJfVuy7uiXVmzWVPtY/BYF+RZF36ZR8rh7wxeZi7yeOdWd06henZf8z5rYfalc0YHr6kE3clVa0jq+pF64w/lso= | 256 ce:e2:28:01:5f:0f:6a:77:df:1e:0a:79:df:9a:54:47 (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHMk87a1jTdUzEWZNm/XtZKIto5reBlJr75kFdCKXscp 6800/tcp open http syn-ack ttl 60 aria2 downloader JSON-RPC | http-methods: |_ Supported Methods: OPTIONS |_http-title: Site doesn&amp;#39;t have a title.</description></item><item><title>Block | THM Writeup</title><link>https://cyberjagadeesh.github.io/posts/block/writeup/</link><pubDate>Wed, 09 Oct 2024 22:44:52 +0530</pubDate><guid>https://cyberjagadeesh.github.io/posts/block/writeup/</guid><description>Introduction Detailed walkthroughs for Block CTF challenges on TryHackMe .
Description One of your junior system administrators forgot to deactivate two accounts from a pair of recently fired employees. We believe these employees used the credentials they were given in order to access some of the many private files from our server, but we need concrete proof. The junior system administrator only has a small network capture of the incident and a memory dump of the Local Security Authority Subsystem Service process.</description></item><item><title>Pyrat | THM Writeup</title><link>https://cyberjagadeesh.github.io/posts/pyrat/writeup/</link><pubDate>Mon, 07 Oct 2024 20:28:01 +0530</pubDate><guid>https://cyberjagadeesh.github.io/posts/pyrat/writeup/</guid><description>Introduction Detailed walkthroughs for Pyrat CTF challenges on TryHackMe .
Description Pyrat receives a curious response from an HTTP server, which leads to a potential Python code execution vulnerability. With a cleverly crafted payload, it is possible to gain a shell on the machine. Delving into the directories, the author uncovers a well-known folder that provides a user with access to credentials. A subsequent exploration yields valuable insights into the application&amp;rsquo;s older version.</description></item><item><title>The London Bridge | THM Writeup</title><link>https://cyberjagadeesh.github.io/posts/thelondonbridge/writeup/</link><pubDate>Wed, 02 Oct 2024 23:46:18 +0530</pubDate><guid>https://cyberjagadeesh.github.io/posts/thelondonbridge/writeup/</guid><description>Introduction Detailed walkthroughs for The London Bridge CTF challenges on TryHackMe .
Shell as beth echo &amp;#34;10.10.72.132 londonbridge.thm&amp;#34; &amp;gt;&amp;gt; /etc/hosts Mappped the ip to domain londonbridge.thm.
Rustscan $ rustscan -a londonbridge.thm -- -sC -sV PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 60 OpenSSH 7.6p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0) | ssh-hostkey: | 2048 58:c1:e4:79:ca:70:bc:3b:8d:b8:22:17:2f:62:1a:34 (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDziNs6aSHIQOJFilv8PhCPd676iD1TrhMYe4p4Mj2E3yaAl4xb8DNT2dhpcv6H8EvtCJnAbXmnFTTOZy14fd7FKc2/Mr4MNLsINFpMU8hc85g6S9ZEnWKlU8dw5jUUeZnAbHSTnq6ARvEbT/Y5seiWEJ7IBiUqptlUA2eiOU7g0DFwrYH7n40aDe0m6PKPIfI9G0XO0cJHISeJ0bsSES1uun2WHLM0sRx+17hrBgM2YfD9OevcltVMlQqWasP9lqf2ooOdBvQTq4eH5UyyuEzaRtQwBYP/wWQEVFacejJE1iT2VD6ZAilhlzo9mww9vqTEwGTvatH65wiyCZHMvrSb | 256 2a:b4:1f:2c:72:35:7a:c3:7a:5c:7d:47:d6:d0:73:c8 (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJuZrGZxDIlI4pU1KNZ8A87cWFcgHxRSt7yFgBtJoUQMhNmcw8FSVC54b7sBYXCgBsgISZfWYPjBM9kikh8Jnkw= | 256 1c:7e:d2:c9:dd:c2:e4:ac:11:7e:45:6a:2f:44:af:0f (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICkCeqFADY/YvhJyJabcs5DVTYbl/DEKEpBoluTuDdB1 8080/tcp open http-proxy syn-ack ttl 60 gunicorn |_http-server-header: gunicorn | fingerprint-strings: | GetRequest: | HTTP/1.</description></item><item><title>Cheese CTF | THM Writeup</title><link>https://cyberjagadeesh.github.io/posts/cheesectf/writeup/</link><pubDate>Mon, 30 Sep 2024 20:29:01 +0530</pubDate><guid>https://cyberjagadeesh.github.io/posts/cheesectf/writeup/</guid><description>Introduction Detailed walkthroughs for Cheese CTF CTF challenges on TryHackMe .
Initial Foothold echo &amp;#34;10.10.16.91 cheese.thm&amp;#34; &amp;gt;&amp;gt; /etc/hosts Mappped the ip to domain certain-doom.thm.
nmap nmap results Initial scan gives result as lot (n) number of ports open. May be they are tricking us not to look for what we want.
$ nmap cheese.thm -sC -sC -p22,80 Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-09-29 22:48 IST Nmap scan report for cheese.</description></item><item><title>Breakme | THM Writeup</title><link>https://cyberjagadeesh.github.io/posts/breakme/writeup/</link><pubDate>Sun, 29 Sep 2024 20:05:31 +0530</pubDate><guid>https://cyberjagadeesh.github.io/posts/breakme/writeup/</guid><description>Introduction Detailed walkthroughs for Breakme CTF challenges on TryHackMe .
Initial Foothold $ echo &amp;#34;10.10.81.254 certain-doom.thm&amp;#34; &amp;gt;&amp;gt; /etc/hosts Mappped the ip to domain certain-doom.thm.
rustscan Lets startetwork with Network scan.
$ rustscan -a breakme.thm -- -sC -sV PORT STATE SERVICE REASON VERSION 22/tcp open ssh syn-ack ttl 60 OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0) | ssh-hostkey: | 3072 8e:4f:77:7f:f6:aa:6a:dc:17:c9:bf:5a:2b:eb:8c:41 (RSA) | ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDPKq6PCdkc7tlJ9u/XcYjAfE8S8bOYjQe4+3teDY9e24Hfh7Qc3kXDIN52yu+ijvM7ZhcWwwLqikpNzqbhCQq8Ytf60lqNTPvekszBOP4xCJJWm2roGNftNu+IAIWgar7vOhHxLlniLdIt514pbiG2ZPZGxVdBHb7WsVVGUuM+b0AQOH7S9FLXBVqngrlrXUhhBsYtREfZxs4k+AE4N2ajcCEtPcdiLybPXddOD4GgM0nSwpTwlDehZ2NWVETT6ibQjl8T7WGogeIq1oO/LyOjLeu6MKuchp1H5FkIqe+wyZtRhjAsyKjrCGrCV4QM004AtcR/NjHaK7vvEqvRKOYmCmk7IotV/AtAD37GEu+qX0SePWVbZ8DweVIHYBPbJv1nCXkAy+T8eoj1dnvCgKsfz7L5PbkWucfF+gwzGTHwq2n9TrEOy99p6MStNv8ZBkXBY+2moD0ahZA3f6qYuvjlH4uVTCzXnbLxGTK0hdWGvT4PvC0vGh661mmaIhI3Ag0= | 256 a3:9c:66:73:fc:b9:23:c0:0f:da:1d:c9:84:d6:b1:4a (ECDSA) | ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPeQGv1A7372SDcT2mRIrMxbQaXJ1RA1ibSYWQ6WJxPH5YZCEQzSTHh5eTrum2k0SvIjmPyLfsoVmmOoPZGaR1g= | 256 6d:c2:0e:89:25:55:10:a9:9e:41:6e:0d:81:9a:17:cb (ED25519) |_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAuvMwyWKUHQmG5CUtHi/vQ5F2fhnT8k0jGo18znKuHQ 80/tcp open http syn-ack ttl 60 Apache httpd 2.</description></item><item><title>CERTain Doom | THM Writeup</title><link>https://cyberjagadeesh.github.io/posts/certaindoom/writeup/</link><pubDate>Mon, 23 Sep 2024 23:22:49 +0530</pubDate><guid>https://cyberjagadeesh.github.io/posts/certaindoom/writeup/</guid><description>Introduction Detailed walkthroughs for CERTain Doom CTF challenges on TryHackMe .
$ echo &amp;#34;10.10.81.254 certain-doom.thm&amp;#34; &amp;gt;&amp;gt; /etc/hosts Mappped the ip to domain certain-doom.thm.
Questions 1. What is the web flag? Hint:Today&amp;#39;s lucky number is 11 2. What is the user&amp;#39;s flag? 3. What is the super secret flag? Hint: supersonic subatomic Initial Foothold Rustscan $ rustscan -a certain-doom.thm -- -sV -sC .----. .-. .-. .----..---. .----. .---. .--. .-. .-. | {} }| { } |{ {__ {_ _}{ {__ / ___} / {} \ | `| | | .</description></item><item><title>Chrome | THM Writeup</title><link>https://cyberjagadeesh.github.io/posts/chrome/writeup/</link><pubDate>Tue, 10 Sep 2024 09:58:25 +0530</pubDate><guid>https://cyberjagadeesh.github.io/posts/chrome/writeup/</guid><description>Introduction Detailed walkthroughs for Chrome CTF challenges on TryHackMe .
Description A password manager is only as strong as the password that encrypts it. You find that a malicious actor extracted something over the network, but what? Help us find out!
1.What is the first password that we find? 2.What is the URL found in the first index? Fully defang the URL 3.What is the password found in the first index?</description></item><item><title>U.A. High School | THM Writeup</title><link>https://cyberjagadeesh.github.io/posts/u.a.highschool/writeup/</link><pubDate>Sun, 25 Aug 2024 22:54:06 +0530</pubDate><guid>https://cyberjagadeesh.github.io/posts/u.a.highschool/writeup/</guid><description>Introduction Detailed walkthroughs for U.A. High School CTF challenges on TryHackMe .
Summary This CTF challenge required participants to identify and exploit a hidden OS command injection vulnerability in the U.A. Superhero Academy&amp;rsquo;s website. Successful exploitation led to gaining root privileges on the system.
Vulnerability The website contains a hidden functionality that allows for the execution of shell commands. This vulnerability can be exploited to gain unauthorized access to the system.</description></item><item><title>Nessus Installation Guide</title><link>https://cyberjagadeesh.github.io/posts/nessus/writeup/</link><pubDate>Tue, 20 Aug 2024 23:24:19 +0530</pubDate><guid>https://cyberjagadeesh.github.io/posts/nessus/writeup/</guid><description>Intro Nessus is a proprietary vulnerability scanner developed by Tenable, Inc. This blog is about the installation of Nessus Essentials on Linux.
Installation Register First lets register in Tenable Nessus Essentials to get the activation code.
Tenable Nessus Essentials Enter your information in the register form shown above, click Get Started.
Download Nessus Mail with Activation Code We should have received a mail with Activation Code. Note down the activation code and click the Download Nessus for the downloading page.</description></item><item><title>Airplane | THM Writeup</title><link>https://cyberjagadeesh.github.io/posts/airplane/writeup/</link><pubDate>Sun, 11 Aug 2024 19:39:14 +0530</pubDate><guid>https://cyberjagadeesh.github.io/posts/airplane/writeup/</guid><description>Introduction Detailed walkthroughs for Airplane CTF challenges on TryHackMe .
Tools Used rustscan, ffuf, nessus, curl, nc, gdb, ssh-keygen, ssh
Enumeration Lets start the process by mapping host-name to target IP address.
sudo echo &amp;#34;10.10.249.133 airplane.thm&amp;#34; &amp;gt;&amp;gt; /etc/hosts Rustscan Let&amp;rsquo;s start enumaration process using rustscan portscanner.
$ rustscan -a airplane.thm -- -sC -sV Open 10.10.249.133:22 Open 10.10.249.133:6048 Open 10.10.249.133:8000 [~] Starting Script(s) [&amp;gt;] Running script &amp;#34;nmap -vvv -p {{port}} {{ip}} -sC -sV&amp;#34; on ip 10.</description></item><item><title>New York Flankees | THM Writeup</title><link>https://cyberjagadeesh.github.io/posts/thenewyorkflankees/writeup/</link><pubDate>Sun, 04 Aug 2024 07:35:56 +0530</pubDate><guid>https://cyberjagadeesh.github.io/posts/thenewyorkflankees/writeup/</guid><description>Introduction Detailed walkthrough for New York Flankees CTF challenges on TryHackMe .
Tools Used rustscan, burpsuite
Enumeration Lets start the process by mapping host-name to target IP address.
sudo echo &amp;#34;10.10.140.44 nythm.com&amp;#34; &amp;gt;&amp;gt; /etc/hosts Let&amp;rsquo;s start enumaration process using rustscan portscanner.
rustscan -a nythm.com -- -sC -sV .----. .-. .-. .----..---. .----. .---. .--. .-. .-. | {} }| { } |{ {__ {_ _}{ {__ / ___} / {} \ | `| | | .</description></item><item><title>CyberLens CTF |THM Writeup</title><link>https://cyberjagadeesh.github.io/posts/cyberlens/writeup/</link><pubDate>Mon, 22 Jul 2024 18:32:40 +0530</pubDate><guid>https://cyberjagadeesh.github.io/posts/cyberlens/writeup/</guid><description>Introduction Detailed walkthrough for CyberLens CTF challenges on TryHackMe .
Tools Used rustscan, ping, burpsuite, nc, metasploit, msfvenom.
Enumeration Lets start the process by mapping host-name to target IP address. mapping cyberlens.thm to the target IP address When any user or application on the system tries to access cyberlens.thm, it will be directed to the IP address specified in the /etc/hosts file. Lets use rustscan for port scanning the target domain.</description></item><item><title/><link>https://cyberjagadeesh.github.io/manifest.json</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cyberjagadeesh.github.io/manifest.json</guid><description/></item><item><title/><link>https://cyberjagadeesh.github.io/search/_index.de/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cyberjagadeesh.github.io/search/_index.de/</guid><description/></item><item><title/><link>https://cyberjagadeesh.github.io/search/_index.es/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cyberjagadeesh.github.io/search/_index.es/</guid><description/></item><item><title/><link>https://cyberjagadeesh.github.io/search/_index.fr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cyberjagadeesh.github.io/search/_index.fr/</guid><description/></item><item><title/><link>https://cyberjagadeesh.github.io/search/_index.hi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cyberjagadeesh.github.io/search/_index.hi/</guid><description/></item><item><title/><link>https://cyberjagadeesh.github.io/search/_index.jp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cyberjagadeesh.github.io/search/_index.jp/</guid><description/></item><item><title/><link>https://cyberjagadeesh.github.io/search/_index.nl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cyberjagadeesh.github.io/search/_index.nl/</guid><description/></item><item><title/><link>https://cyberjagadeesh.github.io/search/_index.pl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cyberjagadeesh.github.io/search/_index.pl/</guid><description/></item><item><title/><link>https://cyberjagadeesh.github.io/search/_index.ru/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cyberjagadeesh.github.io/search/_index.ru/</guid><description/></item><item><title/><link>https://cyberjagadeesh.github.io/search/_index.zh-cn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cyberjagadeesh.github.io/search/_index.zh-cn/</guid><description/></item><item><title>whoami</title><link>https://cyberjagadeesh.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cyberjagadeesh.github.io/about/</guid><description>About Me Hii there,
A little about myself:
I am Jagadeeshwaran, @CyberJagadeesh. With a strong foundation in Android Application Reverse Engineering built over 3 years, I have developed a keen eye for understanding how apps function and identifying potential vulnerabilities. My passion extends to the broader realm of cybersecurity, where I specialize in penetration testing with a particular focus on web application security and network vulnerability assessments. To stay at the forefront of the field, I am dedicated to continuous learning, actively participating in CTF challenges, and expanding my skill set to include DAST (Dynamic Application Security Testing).</description></item></channel></rss>